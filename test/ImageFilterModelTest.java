import static org.junit.Assert.assertEquals;

import imageio.ImageReadWrite;
import imageio.IoPPM;
import imageio.PPMReadWrite;
import java.io.IOException;
import org.junit.Test;
import sinimage.AImageModifyControl;
import sinimage.ImageModifyControlModel;

/**
 * for test the imageModifyControlModel class.
 */
public class ImageFilterModelTest {

  AImageModifyControl ex1;
  AImageModifyControl ex2;
  AImageModifyControl ex3;
  ImageReadWrite write = new PPMReadWrite();

  @Test
  public void BlurTester() throws IOException {
    this.initial();
    ex1.blur();
    write.outputImage("/Users/hzh-mac/Desktop/test/HW5/res/a.ppm", ex1.getColor());
    assertEquals(this.readPPM(), "P3\n"
        + "10 6\n"
        + "255\n"
        + "0\n"
        + "0\n"
        + "140\n"
        + "0\n"
        + "46\n"
        + "186\n"
        + "0\n"
        + "140\n"
        + "186\n"
        + "24\n"
        + "164\n"
        + "164\n"
        + "72\n"
        + "118\n"
        + "118\n"
        + "72\n"
        + "72\n"
        + "118\n"
        + "24\n"
        + "24\n"
        + "164\n"
        + "0\n"
        + "46\n"
        + "186\n"
        + "0\n"
        + "140\n"
        + "186\n"
        + "0\n"
        + "140\n"
        + "140\n"
        + "0\n"
        + "46\n"
        + "186\n"
        + "8\n"
        + "100\n"
        + "240\n"
        + "24\n"
        + "179\n"
        + "225\n"
        + "48\n"
        + "188\n"
        + "203\n"
        + "80\n"
        + "126\n"
        + "172\n"
        + "72\n"
        + "87\n"
        + "179\n"
        + "24\n"
        + "70\n"
        + "225\n"
        + "8\n"
        + "100\n"
        + "240\n"
        + "24\n"
        + "179\n"
        + "225\n"
        + "24\n"
        + "164\n"
        + "164\n"
        + "0\n"
        + "140\n"
        + "186\n"
        + "24\n"
        + "179\n"
        + "225\n"
        + "72\n"
        + "164\n"
        + "179\n"
        + "80\n"
        + "126\n"
        + "172\n"
        + "48\n"
        + "63\n"
        + "203\n"
        + "24\n"
        + "70\n"
        + "225\n"
        + "8\n"
        + "148\n"
        + "240\n"
        + "24\n"
        + "179\n"
        + "225\n"
        + "72\n"
        + "164\n"
        + "179\n"
        + "72\n"
        + "118\n"
        + "118\n"
        + "24\n"
        + "164\n"
        + "164\n"
        + "48\n"
        + "188\n"
        + "203\n"
        + "80\n"
        + "126\n"
        + "172\n"
        + "72\n"
        + "87\n"
        + "179\n"
        + "24\n"
        + "70\n"
        + "225\n"
        + "8\n"
        + "100\n"
        + "240\n"
        + "24\n"
        + "179\n"
        + "225\n"
        + "48\n"
        + "188\n"
        + "203\n"
        + "80\n"
        + "126\n"
        + "172\n"
        + "72\n"
        + "72\n"
        + "118\n"
        + "72\n"
        + "118\n"
        + "118\n"
        + "80\n"
        + "126\n"
        + "172\n"
        + "48\n"
        + "63\n"
        + "203\n"
        + "24\n"
        + "70\n"
        + "225\n"
        + "8\n"
        + "148\n"
        + "240\n"
        + "24\n"
        + "179\n"
        + "225\n"
        + "72\n"
        + "164\n"
        + "179\n"
        + "80\n"
        + "126\n"
        + "172\n"
        + "48\n"
        + "63\n"
        + "203\n"
        + "24\n"
        + "24\n"
        + "164\n"
        + "72\n"
        + "72\n"
        + "72\n"
        + "72\n"
        + "72\n"
        + "118\n"
        + "24\n"
        + "24\n"
        + "164\n"
        + "0\n"
        + "46\n"
        + "186\n"
        + "0\n"
        + "140\n"
        + "186\n"
        + "24\n"
        + "164\n"
        + "164\n"
        + "72\n"
        + "118\n"
        + "118\n"
        + "72\n"
        + "72\n"
        + "118\n"
        + "24\n"
        + "24\n"
        + "164\n"
        + "0\n"
        + "0\n"
        + "140\n");
    //ex2.checkerboard(2, 5,3, new ArrayList<>(Arrays.asList(Color.blue, Color.cyan, Color.gray)));
  }

  @Test
  public void SharpTester() throws IOException {
    this.initial();
    ex1.sharp();
    write.outputImage("/Users/hzh-mac/Desktop/test/HW5/res/a.ppm", ex1.getColor());
    assertEquals(this.readPPM(), "P3\n"
        + "10 6\n"
        + "255\n"
        + "0\n"
        + "0\n"
        + "255\n"
        + "0\n"
        + "0\n"
        + "255\n"
        + "0\n"
        + "255\n"
        + "255\n"
        + "0\n"
        + "255\n"
        + "255\n"
        + "192\n"
        + "223\n"
        + "95\n"
        + "208\n"
        + "81\n"
        + "79\n"
        + "16\n"
        + "0\n"
        + "255\n"
        + "0\n"
        + "0\n"
        + "255\n"
        + "0\n"
        + "255\n"
        + "255\n"
        + "0\n"
        + "255\n"
        + "255\n"
        + "0\n"
        + "0\n"
        + "255\n"
        + "0\n"
        + "108\n"
        + "255\n"
        + "0\n"
        + "255\n"
        + "255\n"
        + "64\n"
        + "255\n"
        + "255\n"
        + "208\n"
        + "207\n"
        + "205\n"
        + "192\n"
        + "96\n"
        + "220\n"
        + "0\n"
        + "0\n"
        + "255\n"
        + "0\n"
        + "76\n"
        + "255\n"
        + "32\n"
        + "255\n"
        + "255\n"
        + "32\n"
        + "255\n"
        + "255\n"
        + "0\n"
        + "255\n"
        + "255\n"
        + "0\n"
        + "255\n"
        + "255\n"
        + "160\n"
        + "255\n"
        + "99\n"
        + "192\n"
        + "129\n"
        + "67\n"
        + "48\n"
        + "0\n"
        + "209\n"
        + "0\n"
        + "0\n"
        + "255\n"
        + "0\n"
        + "238\n"
        + "255\n"
        + "0\n"
        + "255\n"
        + "255\n"
        + "192\n"
        + "255\n"
        + "226\n"
        + "208\n"
        + "208\n"
        + "84\n"
        + "0\n"
        + "255\n"
        + "255\n"
        + "64\n"
        + "255\n"
        + "255\n"
        + "192\n"
        + "131\n"
        + "69\n"
        + "160\n"
        + "3\n"
        + "98\n"
        + "0\n"
        + "0\n"
        + "255\n"
        + "0\n"
        + "16\n"
        + "255\n"
        + "0\n"
        + "255\n"
        + "255\n"
        + "48\n"
        + "255\n"
        + "211\n"
        + "208\n"
        + "210\n"
        + "211\n"
        + "192\n"
        + "68\n"
        + "99\n"
        + "192\n"
        + "255\n"
        + "193\n"
        + "208\n"
        + "255\n"
        + "255\n"
        + "64\n"
        + "0\n"
        + "255\n"
        + "0\n"
        + "1\n"
        + "255\n"
        + "0\n"
        + "255\n"
        + "255\n"
        + "0\n"
        + "255\n"
        + "255\n"
        + "192\n"
        + "255\n"
        + "227\n"
        + "208\n"
        + "209\n"
        + "211\n"
        + "64\n"
        + "35\n"
        + "255\n"
        + "0\n"
        + "0\n"
        + "255\n"
        + "208\n"
        + "146\n"
        + "83\n"
        + "192\n"
        + "130\n"
        + "192\n"
        + "0\n"
        + "0\n"
        + "255\n"
        + "0\n"
        + "0\n"
        + "255\n"
        + "0\n"
        + "255\n"
        + "255\n"
        + "16\n"
        + "255\n"
        + "255\n"
        + "208\n"
        + "211\n"
        + "87\n"
        + "192\n"
        + "68\n"
        + "101\n"
        + "0\n"
        + "0\n"
        + "255\n"
        + "0\n"
        + "0\n"
        + "255\n");
  }

  @Test
  public void GreyscaleTester() throws IOException {
    this.initial();
    ex1.grey();
    write.outputImage("/Users/hzh-mac/Desktop/test/HW5/res/a.ppm", ex1.getColor());
    assertEquals(this.readPPM(), "P3\n"
        + "10 6\n"
        + "255\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "200\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "128\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "18\n"
        + "18\n");
  }

  @Test
  public void SepiaTester() throws IOException {
    this.initial();
    ex1.sepia();
    write.outputImage("/Users/hzh-mac/Desktop/test/HW5/res/a.ppm", ex1.getColor());
    assertEquals(this.readPPM(), "P3\n"
        + "10 6\n"
        + "255\n"
        + "48\n"
        + "42\n"
        + "33\n"
        + "48\n"
        + "42\n"
        + "33\n"
        + "244\n"
        + "217\n"
        + "169\n"
        + "244\n"
        + "217\n"
        + "169\n"
        + "172\n"
        + "153\n"
        + "119\n"
        + "172\n"
        + "153\n"
        + "119\n"
        + "48\n"
        + "42\n"
        + "33\n"
        + "48\n"
        + "42\n"
        + "33\n"
        + "244\n"
        + "217\n"
        + "169\n"
        + "244\n"
        + "217\n"
        + "169\n"
        + "48\n"
        + "42\n"
        + "33\n"
        + "48\n"
        + "42\n"
        + "33\n"
        + "244\n"
        + "217\n"
        + "169\n"
        + "244\n"
        + "217\n"
        + "169\n"
        + "172\n"
        + "153\n"
        + "119\n"
        + "172\n"
        + "153\n"
        + "119\n"
        + "48\n"
        + "42\n"
        + "33\n"
        + "48\n"
        + "42\n"
        + "33\n"
        + "244\n"
        + "217\n"
        + "169\n"
        + "244\n"
        + "217\n"
        + "169\n"
        + "244\n"
        + "217\n"
        + "169\n"
        + "244\n"
        + "217\n"
        + "169\n"
        + "172\n"
        + "153\n"
        + "119\n"
        + "172\n"
        + "153\n"
        + "119\n"
        + "48\n"
        + "42\n"
        + "33\n"
        + "48\n"
        + "42\n"
        + "33\n"
        + "244\n"
        + "217\n"
        + "169\n"
        + "244\n"
        + "217\n"
        + "169\n"
        + "172\n"
        + "153\n"
        + "119\n"
        + "172\n"
        + "153\n"
        + "119\n"
        + "244\n"
        + "217\n"
        + "169\n"
        + "244\n"
        + "217\n"
        + "169\n"
        + "172\n"
        + "153\n"
        + "119\n"
        + "172\n"
        + "153\n"
        + "119\n"
        + "48\n"
        + "42\n"
        + "33\n"
        + "48\n"
        + "42\n"
        + "33\n"
        + "244\n"
        + "217\n"
        + "169\n"
        + "244\n"
        + "217\n"
        + "169\n"
        + "172\n"
        + "153\n"
        + "119\n"
        + "172\n"
        + "153\n"
        + "119\n"
        + "172\n"
        + "153\n"
        + "119\n"
        + "172\n"
        + "153\n"
        + "119\n"
        + "48\n"
        + "42\n"
        + "33\n"
        + "48\n"
        + "42\n"
        + "33\n"
        + "244\n"
        + "217\n"
        + "169\n"
        + "244\n"
        + "217\n"
        + "169\n"
        + "172\n"
        + "153\n"
        + "119\n"
        + "172\n"
        + "153\n"
        + "119\n"
        + "48\n"
        + "42\n"
        + "33\n"
        + "48\n"
        + "42\n"
        + "33\n"
        + "172\n"
        + "153\n"
        + "119\n"
        + "172\n"
        + "153\n"
        + "119\n"
        + "48\n"
        + "42\n"
        + "33\n"
        + "48\n"
        + "42\n"
        + "33\n"
        + "244\n"
        + "217\n"
        + "169\n"
        + "244\n"
        + "217\n"
        + "169\n"
        + "172\n"
        + "153\n"
        + "119\n"
        + "172\n"
        + "153\n"
        + "119\n"
        + "48\n"
        + "42\n"
        + "33\n"
        + "48\n"
        + "42\n"
        + "33\n");
  }

  @Test
  public void ImagewithCommentTester() throws IOException {
    this.initial();
    write.outputImage("/Users/hzh-mac/Desktop/test/HW5/res/a.ppm", ex2.getColor());
    assertEquals(this.readPPM(), "P3\n"
        + "10 6\n"
        + "255\n"
        + "0\n"
        + "0\n"
        + "140\n"
        + "0\n"
        + "46\n"
        + "186\n"
        + "0\n"
        + "140\n"
        + "186\n"
        + "24\n"
        + "164\n"
        + "164\n"
        + "72\n"
        + "118\n"
        + "118\n"
        + "72\n"
        + "72\n"
        + "118\n"
        + "24\n"
        + "24\n"
        + "164\n"
        + "0\n"
        + "46\n"
        + "186\n"
        + "0\n"
        + "140\n"
        + "186\n"
        + "0\n"
        + "140\n"
        + "140\n"
        + "0\n"
        + "46\n"
        + "186\n"
        + "8\n"
        + "100\n"
        + "240\n"
        + "24\n"
        + "179\n"
        + "225\n"
        + "48\n"
        + "188\n"
        + "203\n"
        + "80\n"
        + "126\n"
        + "172\n"
        + "72\n"
        + "87\n"
        + "179\n"
        + "24\n"
        + "70\n"
        + "225\n"
        + "8\n"
        + "100\n"
        + "240\n"
        + "24\n"
        + "179\n"
        + "225\n"
        + "24\n"
        + "164\n"
        + "164\n"
        + "0\n"
        + "140\n"
        + "186\n"
        + "24\n"
        + "179\n"
        + "225\n"
        + "72\n"
        + "164\n"
        + "179\n"
        + "80\n"
        + "126\n"
        + "172\n"
        + "48\n"
        + "63\n"
        + "203\n"
        + "24\n"
        + "70\n"
        + "225\n"
        + "8\n"
        + "148\n"
        + "240\n"
        + "24\n"
        + "179\n"
        + "225\n"
        + "72\n"
        + "164\n"
        + "179\n"
        + "72\n"
        + "118\n"
        + "118\n"
        + "24\n"
        + "164\n"
        + "164\n"
        + "48\n"
        + "188\n"
        + "203\n"
        + "80\n"
        + "126\n"
        + "172\n"
        + "72\n"
        + "87\n"
        + "179\n"
        + "24\n"
        + "70\n"
        + "225\n"
        + "8\n"
        + "100\n"
        + "240\n"
        + "24\n"
        + "179\n"
        + "225\n"
        + "48\n"
        + "188\n"
        + "203\n"
        + "80\n"
        + "126\n"
        + "172\n"
        + "72\n"
        + "72\n"
        + "118\n"
        + "72\n"
        + "118\n"
        + "118\n"
        + "80\n"
        + "126\n"
        + "172\n"
        + "48\n"
        + "63\n"
        + "203\n"
        + "24\n"
        + "70\n"
        + "225\n"
        + "8\n"
        + "148\n"
        + "240\n"
        + "24\n"
        + "179\n"
        + "225\n"
        + "72\n"
        + "164\n"
        + "179\n"
        + "80\n"
        + "126\n"
        + "172\n"
        + "48\n"
        + "63\n"
        + "203\n"
        + "24\n"
        + "24\n"
        + "164\n"
        + "72\n"
        + "72\n"
        + "72\n"
        + "72\n"
        + "72\n"
        + "118\n"
        + "24\n"
        + "24\n"
        + "164\n"
        + "0\n"
        + "46\n"
        + "186\n"
        + "0\n"
        + "140\n"
        + "186\n"
        + "24\n"
        + "164\n"
        + "164\n"
        + "72\n"
        + "118\n"
        + "118\n"
        + "72\n"
        + "72\n"
        + "118\n"
        + "24\n"
        + "24\n"
        + "164\n"
        + "0\n"
        + "0\n"
        + "140\n");
  }

  @Test
  public void filter1widthImageTester() throws IOException {
    this.initial();
    ex3.blur();
    write.outputImage("/Users/hzh-mac/Desktop/test/HW5/res/a.ppm", ex3.getColor());
    assertEquals(this.readPPM(), "P3\n"
        + "1 4\n"
        + "255\n"
        + "37\n"
        + "33\n"
        + "21\n"
        + "50\n"
        + "45\n"
        + "22\n"
        + "39\n"
        + "34\n"
        + "7\n"
        + "13\n"
        + "11\n"
        + "0\n");
  }

  @Test
  public void transformation1widthImageTester() throws IOException {
    this.initial();
    ex3.sepia();
    write.outputImage("/Users/hzh-mac/Desktop/test/HW5/res/a.ppm", ex3.getColor());
    assertEquals(this.readPPM(), "P3\n"
        + "1 4\n"
        + "255\n"
        + "119\n"
        + "106\n"
        + "83\n"
        + "122\n"
        + "109\n"
        + "85\n"
        + "116\n"
        + "103\n"
        + "80\n"
        + "0\n"
        + "0\n"
        + "0\n");
  }

  @Test(expected = IllegalArgumentException.class)
  public void ImageInputNull() {
    new ImageModifyControlModel(null, null);
  }

  @Test
  public void ImageColorGreat255() throws IOException {
    this.initial();
    this.ex1.sepia();
    this.ex1.sepia();
    this.ex1.sepia();
    this.ex1.sepia();
    this.ex1.sepia();
    this.ex1.sepia();
    write.outputImage("/Users/hzh-mac/Desktop/test/HW5/res/a.ppm", ex1.getColor());
    assertEquals(this.readPPM(), "P3\n"
        + "10 6\n"
        + "255\n"
        + "119\n"
        + "106\n"
        + "82\n"
        + "119\n"
        + "106\n"
        + "82\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "119\n"
        + "106\n"
        + "82\n"
        + "119\n"
        + "106\n"
        + "82\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "119\n"
        + "106\n"
        + "82\n"
        + "119\n"
        + "106\n"
        + "82\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "119\n"
        + "106\n"
        + "82\n"
        + "119\n"
        + "106\n"
        + "82\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "119\n"
        + "106\n"
        + "82\n"
        + "119\n"
        + "106\n"
        + "82\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "119\n"
        + "106\n"
        + "82\n"
        + "119\n"
        + "106\n"
        + "82\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "119\n"
        + "106\n"
        + "82\n"
        + "119\n"
        + "106\n"
        + "82\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "119\n"
        + "106\n"
        + "82\n"
        + "119\n"
        + "106\n"
        + "82\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "119\n"
        + "106\n"
        + "82\n"
        + "119\n"
        + "106\n"
        + "82\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "255\n"
        + "119\n"
        + "106\n"
        + "82\n"
        + "119\n"
        + "106\n"
        + "82\n");
  }

  @Test
  public void ImageColorUnder0() throws IOException {
    this.initial();
    this.ex3.grey();
    write.outputImage("/Users/hzh-mac/Desktop/test/HW5/res/a.ppm", ex3.getColor());
    assertEquals(this.readPPM(), "P3\n"
        + "1 4\n"
        + "255\n"
        + "90\n"
        + "90\n"
        + "90\n"
        + "92\n"
        + "92\n"
        + "92\n"
        + "91\n"
        + "91\n"
        + "91\n"
        + "0\n"
        + "0\n"
        + "0\n");
  }

  @Test(expected = IllegalArgumentException.class)
  public void WrongPPMFormat() throws IOException {
    new ImageModifyControlModel(write.readRGB("/Users/hzh-mac/Desktop/test/HW5/res/testWrong"
        + ".ppm"),
        "/Users/hzh-mac/Desktop/test/HW5/res/testWrong.ppm");
  }

  @Test
  public void mosacTest() throws IOException {
    this.initial();
    this.ex1.mosaic(5);
    write.outputImage("/Users/hzh-mac/Desktop/test/HW5/res/a.ppm", ex1.getColor());
    assertEquals(this.readPPM(), "P3\n"
        + "1 4\n"
        + "255\n"
        + "90\n"
        + "90\n"
        + "90\n"
        + "92\n"
        + "92\n"
        + "92\n"
        + "91\n"
        + "91\n"
        + "91\n"
        + "0\n"
        + "0\n"
        + "0\n");
  }

  private void initial() throws IOException {
    this.ex2 = new ImageModifyControlModel(write.readRGB("/Users/hzh-mac/Desktop/test/HW5/res"
        + "/d.ppm"),
        "/Users/hzh-mac/Desktop/test/HW5/res/d.ppm");

    this.ex1 = new ImageModifyControlModel(write.readRGB("/Users/hzh-mac/Desktop/test/HW5/res"
        + "/b.ppm"),
        "/Users/hzh-mac/Desktop/test/HW5/res/b.ppm");
    this.ex3 = new ImageModifyControlModel(write.readRGB("/Users/hzh-mac/Desktop/test/HW5/res"
        + "/test.ppm"),
        "/Users/hzh-mac/Desktop/test/HW5/res/test.ppm");
  }

  private String readPPM() throws IOException {
    IoPPM read = new IoPPM("/Users/hzh-mac/Desktop/test/HW5/res/a.ppm",
        "/Users/hzh-mac/Desktop/test/HW5/res/c.ppm");
    String s = "";
    while (!read.isEnd()) {
      s += read.readLine() + '\n';
    }
    read.ioClose();
    return s;
  }
}
